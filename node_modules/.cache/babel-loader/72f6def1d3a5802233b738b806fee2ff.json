{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Personal\\\\Learning\\\\ReactNative\\\\react-expense\\\\src\\\\components\\\\Tracker\\\\Tracker.js\";\nimport React, { Component, useState } from 'react';\nimport './Tracker.css';\nimport fire from '../../config/Fire';\nimport Transaction from './Transaction/Transaction';\nimport DatePicker from 'react-datepicker';\n\nclass Tracker extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      transactions: [],\n      money: 0,\n      dated: '',\n      transactionName: '',\n      transactionType: '',\n      paymentType: '',\n      price: '',\n      currentUID: fire.auth().currentUser.uid\n    };\n\n    this.logout = () => {\n      fire.auth().signOut();\n    };\n\n    this.handleChange = input => e => {\n      this.setState({\n        [input]: e.target.value !== \"0\" ? e.target.value : \"\"\n      });\n    };\n\n    this.addNewTransaction = () => {\n      const {\n        dated,\n        transactionName,\n        transactionType,\n        paymentType,\n        price,\n        currentUID,\n        money\n      } = this.state; // validation\n\n      if (dated && transactionName && transactionType && paymentType && price) {\n        const BackUpState = this.state.transactions;\n        BackUpState.push({\n          id: BackUpState.length + 1,\n          date: dated,\n          name: transactionName,\n          type: transactionType,\n          method: paymentType,\n          price: price,\n          user_id: currentUID\n        });\n        fire.database().ref('Transactions/' + currentUID).push({\n          id: BackUpState.length,\n          date: dated,\n          name: transactionName,\n          type: transactionType,\n          method: paymentType,\n          price: price,\n          user_id: currentUID\n        }).then(data => {\n          //success callback\n          console.log('success callback');\n          this.setState({\n            transactions: BackUpState,\n            money: transactionType === 'deposit' ? money + parseFloat(price) : money - parseFloat(price),\n            dated: '',\n            transactionName: '',\n            transactionType: '',\n            paymentType: '',\n            price: ''\n          });\n        }).catch(error => {\n          //error callback\n          console.log('error ', error);\n        });\n      }\n    };\n  }\n\n  componentWillMount() {\n    const {\n      currentUID,\n      money\n    } = this.state;\n    let totalMoney = money;\n    const BackUpState = this.state.transactions;\n    fire.database().ref('Transactions/' + currentUID).once('value', snapshot => {\n      // console.log(snapshot);\n      snapshot.forEach(childSnapshot => {\n        totalMoney = childSnapshot.val().type === 'deposit' ? parseFloat(childSnapshot.val().price) + totalMoney : totalMoney - parseFloat(childSnapshot.val().price);\n        BackUpState.push({\n          id: childSnapshot.val().id,\n          date: childSnapshot.val().date,\n          name: childSnapshot.val().name,\n          type: childSnapshot.val().type,\n          method: childSnapshot.val().method,\n          price: childSnapshot.val().price,\n          user_id: childSnapshot.val().user_id\n        }); // console.log(childSnapshot.val().name);\n      });\n      this.setState({\n        transactions: BackUpState,\n        money: totalMoney\n      });\n    });\n  }\n\n  render() {\n    var currentUser = fire.auth().currentUser;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trackerBlock\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Hi, \", currentUser.displayName, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"exit\",\n          onClick: this.logout,\n          children: \"Exit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"totalMoney\",\n        children: [\"Rs.\", this.state.money]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newTransactionBlock\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newTransaction\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.handleChange('dated'),\n              value: this.state.dated,\n              placeholder: \"Date\",\n              type: \"date\",\n              name: \"dated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.handleChange('transactionName'),\n              value: this.state.transactionName,\n              placeholder: \"Transaction Name\",\n              type: \"text\",\n              name: \"transactionName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputGroup\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"type\",\n                onChange: this.handleChange('transactionType'),\n                value: this.state.transactionType,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0\",\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"expense\",\n                  children: \"Expense\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"deposit\",\n                  children: \"Deposit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: this.handleChange('price'),\n                value: this.state.price,\n                placeholder: \"Price\",\n                type: \"text\",\n                name: \"price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputGroup\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"method\",\n                onChange: this.handleChange('paymentType'),\n                value: this.state.paymentType,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0\",\n                  children: \"Method\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"GPpay\",\n                  children: \"GPay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"PhonePe\",\n                  children: \"PhonePe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"PayTM\",\n                  children: \"PayTM\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Cash\",\n                  children: \"Cash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Online\",\n                  children: \"Online\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.addNewTransaction(),\n            className: \"addTransaction\",\n            children: \"+ Add Transaction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"latestTransactions\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Latest Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.keys(this.state.transactions).map(id => /*#__PURE__*/_jsxDEV(Transaction, {\n            dated: this.state.transactions[id].dated,\n            type: this.state.transactions[id].type,\n            method: this.state.transactions[id].method,\n            name: this.state.transactions[id].name,\n            price: this.state.transactions[id].price\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Tracker;","map":{"version":3,"sources":["C:/Personal/Learning/ReactNative/react-expense/src/components/Tracker/Tracker.js"],"names":["React","Component","useState","fire","Transaction","DatePicker","Tracker","state","transactions","money","dated","transactionName","transactionType","paymentType","price","currentUID","auth","currentUser","uid","logout","signOut","handleChange","input","e","setState","target","value","addNewTransaction","BackUpState","push","id","length","date","name","type","method","user_id","database","ref","then","data","console","log","parseFloat","catch","error","componentWillMount","totalMoney","once","snapshot","forEach","childSnapshot","val","render","displayName","Object","keys","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,eAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AACA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE5BM,KAF4B,GAEpB;AACJC,MAAAA,YAAY,EAAE,EADV;AAEJC,MAAAA,KAAK,EAAE,CAFH;AAGJC,MAAAA,KAAK,EAAE,EAHH;AAIJC,MAAAA,eAAe,EAAE,EAJb;AAKJC,MAAAA,eAAe,EAAE,EALb;AAMJC,MAAAA,WAAW,EAAG,EANV;AAOJC,MAAAA,KAAK,EAAE,EAPH;AAQJC,MAAAA,UAAU,EAAEZ,IAAI,CAACa,IAAL,GAAYC,WAAZ,CAAwBC;AARhC,KAFoB;;AAAA,SAc5BC,MAd4B,GAcnB,MAAM;AACXhB,MAAAA,IAAI,CAACa,IAAL,GAAYI,OAAZ;AACH,KAhB2B;;AAAA,SAkB5BC,YAlB4B,GAkBbC,KAAK,IAAIC,CAAC,IAAI;AACzB,WAAKC,QAAL,CAAc;AACV,SAACF,KAAD,GAASC,CAAC,CAACE,MAAF,CAASC,KAAT,KAAkB,GAAlB,GAAwBH,CAAC,CAACE,MAAF,CAASC,KAAjC,GAAyC;AADxC,OAAd;AAGH,KAtB2B;;AAAA,SAyB5BC,iBAzB4B,GAyBR,MAAM;AACtB,YAAM;AAACjB,QAAAA,KAAD;AAAQC,QAAAA,eAAR;AAAyBC,QAAAA,eAAzB;AAA0CC,QAAAA,WAA1C;AAAuDC,QAAAA,KAAvD;AAA8DC,QAAAA,UAA9D;AAA0EN,QAAAA;AAA1E,UAAmF,KAAKF,KAA9F,CADsB,CAGtB;;AACA,UAAGG,KAAK,IAAIC,eAAT,IAA4BC,eAA5B,IAA+CC,WAA/C,IAA8DC,KAAjE,EAAuE;AAEnE,cAAMc,WAAW,GAAG,KAAKrB,KAAL,CAAWC,YAA/B;AACAoB,QAAAA,WAAW,CAACC,IAAZ,CAAiB;AACbC,UAAAA,EAAE,EAAEF,WAAW,CAACG,MAAZ,GAAqB,CADZ;AAEbC,UAAAA,IAAI,EAAEtB,KAFO;AAGbuB,UAAAA,IAAI,EAAEtB,eAHO;AAIbuB,UAAAA,IAAI,EAAEtB,eAJO;AAKbuB,UAAAA,MAAM,EAAEtB,WALK;AAMbC,UAAAA,KAAK,EAAEA,KANM;AAObsB,UAAAA,OAAO,EAAErB;AAPI,SAAjB;AAUAZ,QAAAA,IAAI,CAACkC,QAAL,GAAgBC,GAAhB,CAAoB,kBAAkBvB,UAAtC,EAAkDc,IAAlD,CAAuD;AACnDC,UAAAA,EAAE,EAAEF,WAAW,CAACG,MADmC;AAEnDC,UAAAA,IAAI,EAAEtB,KAF6C;AAGnDuB,UAAAA,IAAI,EAAEtB,eAH6C;AAInDuB,UAAAA,IAAI,EAAEtB,eAJ6C;AAKnDuB,UAAAA,MAAM,EAAEtB,WAL2C;AAMnDC,UAAAA,KAAK,EAAEA,KAN4C;AAOnDsB,UAAAA,OAAO,EAAErB;AAP0C,SAAvD,EAQGwB,IARH,CAQSC,IAAD,IAAU;AACd;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,eAAKlB,QAAL,CAAc;AACVhB,YAAAA,YAAY,EAAEoB,WADJ;AAEVnB,YAAAA,KAAK,EAAEG,eAAe,KAAK,SAApB,GAAgCH,KAAK,GAAGkC,UAAU,CAAC7B,KAAD,CAAlD,GAA4DL,KAAK,GAAGkC,UAAU,CAAC7B,KAAD,CAF3E;AAGVJ,YAAAA,KAAK,EAAE,EAHG;AAIVC,YAAAA,eAAe,EAAE,EAJP;AAKVC,YAAAA,eAAe,EAAE,EALP;AAMVC,YAAAA,WAAW,EAAE,EANH;AAOVC,YAAAA,KAAK,EAAE;AAPG,WAAd;AASH,SApBD,EAoBG8B,KApBH,CAoBUC,KAAD,IAAS;AACd;AACAJ,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAuBG,KAAvB;AACH,SAvBD;AAyBH;AACJ,KApE2B;AAAA;;AAsE5BC,EAAAA,kBAAkB,GAAE;AAChB,UAAM;AAAC/B,MAAAA,UAAD;AAAaN,MAAAA;AAAb,QAAsB,KAAKF,KAAjC;AACA,QAAIwC,UAAU,GAAGtC,KAAjB;AACA,UAAMmB,WAAW,GAAG,KAAKrB,KAAL,CAAWC,YAA/B;AACAL,IAAAA,IAAI,CAACkC,QAAL,GAAgBC,GAAhB,CAAoB,kBAAkBvB,UAAtC,EAAkDiC,IAAlD,CAAuD,OAAvD,EACCC,QAAD,IAAc;AACV;AACAA,MAAAA,QAAQ,CAACC,OAAT,CAAkBC,aAAD,IAAmB;AAEhCJ,QAAAA,UAAU,GACNI,aAAa,CAACC,GAAd,GAAoBlB,IAApB,KAA6B,SAA7B,GACAS,UAAU,CAACQ,aAAa,CAACC,GAAd,GAAoBtC,KAArB,CAAV,GAAwCiC,UADxC,GAEEA,UAAU,GAAGJ,UAAU,CAACQ,aAAa,CAACC,GAAd,GAAoBtC,KAArB,CAH7B;AAKAc,QAAAA,WAAW,CAACC,IAAZ,CAAiB;AACbC,UAAAA,EAAE,EAAEqB,aAAa,CAACC,GAAd,GAAoBtB,EADX;AAEbE,UAAAA,IAAI,EAAEmB,aAAa,CAACC,GAAd,GAAoBpB,IAFb;AAGbC,UAAAA,IAAI,EAAEkB,aAAa,CAACC,GAAd,GAAoBnB,IAHb;AAIbC,UAAAA,IAAI,EAAEiB,aAAa,CAACC,GAAd,GAAoBlB,IAJb;AAKbC,UAAAA,MAAM,EAAEgB,aAAa,CAACC,GAAd,GAAoBjB,MALf;AAMbrB,UAAAA,KAAK,EAAEqC,aAAa,CAACC,GAAd,GAAoBtC,KANd;AAObsB,UAAAA,OAAO,EAAEe,aAAa,CAACC,GAAd,GAAoBhB;AAPhB,SAAjB,EAPgC,CAgBhC;AACH,OAjBD;AAkBA,WAAKZ,QAAL,CAAc;AACVhB,QAAAA,YAAY,EAAEoB,WADJ;AAEVnB,QAAAA,KAAK,EAAEsC;AAFG,OAAd;AAIH,KAzBD;AA0BH;;AAEDM,EAAAA,MAAM,GAAE;AACJ,QAAIpC,WAAW,GAAGd,IAAI,CAACa,IAAL,GAAYC,WAA9B;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAA,6BAAWA,WAAW,CAACqC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,MAAlB;AAAyB,UAAA,OAAO,EAAE,KAAKnC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,0BAAgC,KAAKZ,KAAL,CAAWE,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAOI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACI;AAAA,oCACA;AACQ,cAAA,QAAQ,EAAE,KAAKY,YAAL,CAAkB,OAAlB,CADlB;AAEQ,cAAA,KAAK,EAAE,KAAKd,KAAL,CAAWG,KAF1B;AAGQ,cAAA,WAAW,EAAC,MAHpB;AAIQ,cAAA,IAAI,EAAC,MAJb;AAKQ,cAAA,IAAI,EAAC;AALb;AAAA;AAAA;AAAA;AAAA,oBADA,eAQI;AACI,cAAA,QAAQ,EAAE,KAAKW,YAAL,CAAkB,iBAAlB,CADd;AAEI,cAAA,KAAK,EAAE,KAAKd,KAAL,CAAWI,eAFtB;AAGI,cAAA,WAAW,EAAC,kBAHhB;AAII,cAAA,IAAI,EAAC,MAJT;AAKI,cAAA,IAAI,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,oBARJ,eAeI;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACI;AAAQ,gBAAA,IAAI,EAAC,MAAb;AACI,gBAAA,QAAQ,EAAE,KAAKU,YAAL,CAAkB,iBAAlB,CADd;AAEI,gBAAA,KAAK,EAAE,KAAKd,KAAL,CAAWK,eAFtB;AAAA,wCAGI;AAAQ,kBAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAII;AAAQ,kBAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAKI;AAAQ,kBAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAQI;AACI,gBAAA,QAAQ,EAAE,KAAKS,YAAL,CAAkB,OAAlB,CADd;AAEI,gBAAA,KAAK,EAAE,KAAKd,KAAL,CAAWO,KAFtB;AAGI,gBAAA,WAAW,EAAC,OAHhB;AAII,gBAAA,IAAI,EAAC,MAJT;AAKI,gBAAA,IAAI,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,sBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfJ,eA+BI;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCACI;AAAQ,gBAAA,IAAI,EAAC,QAAb;AACI,gBAAA,QAAQ,EAAE,KAAKO,YAAL,CAAkB,aAAlB,CADd;AAEI,gBAAA,KAAK,EAAE,KAAKd,KAAL,CAAWM,WAFtB;AAAA,wCAGI;AAAQ,kBAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAII;AAAQ,kBAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAKI;AAAQ,kBAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,eAMI;AAAQ,kBAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,eAOI;AAAQ,kBAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ,eAQI;AAAQ,kBAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eA8CI;AAAQ,YAAA,OAAO,EAAE,MAAM,KAAKc,iBAAL,EAAvB;AAAiD,YAAA,SAAS,EAAC,gBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ,eA0DI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAEQ4B,MAAM,CAACC,IAAP,CAAY,KAAKjD,KAAL,CAAWC,YAAvB,EAAqCiD,GAArC,CAA0C3B,EAAD,iBACrC,QAAC,WAAD;AACI,YAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWC,YAAX,CAAwBsB,EAAxB,EAA4BpB,KADvC;AAEI,YAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,YAAX,CAAwBsB,EAAxB,EAA4BI,IAFtC;AAGI,YAAA,MAAM,EAAE,KAAK3B,KAAL,CAAWC,YAAX,CAAwBsB,EAAxB,EAA4BK,MAHxC;AAII,YAAA,IAAI,EAAE,KAAK5B,KAAL,CAAWC,YAAX,CAAwBsB,EAAxB,EAA4BG,IAJtC;AAKI,YAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWC,YAAX,CAAwBsB,EAAxB,EAA4BhB;AALvC,aAAkBgB,EAAlB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA1DJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA6EH;;AArL2B;;AAwLhC,eAAexB,OAAf","sourcesContent":["import React, { Component, useState } from 'react';\n\nimport './Tracker.css';\nimport fire from '../../config/Fire';\nimport Transaction from './Transaction/Transaction';\nimport DatePicker from 'react-datepicker';\nclass Tracker extends Component {\n\n    state = {\n        transactions: [],\n        money: 0,\n        dated: '',\n        transactionName: '',\n        transactionType: '',\n        paymentType : '',\n        price: '',\n        currentUID: fire.auth().currentUser.uid\n    }\n\n    // logout function\n    logout = () => {\n        fire.auth().signOut();\n    }\n\n    handleChange = input => e => {\n        this.setState({\n            [input]: e.target.value !==\"0\" ? e.target.value : \"\"\n        });\n    }\n\n    // add transaction\n    addNewTransaction = () => {\n        const {dated, transactionName, transactionType, paymentType, price, currentUID, money} = this.state;\n\n        // validation\n        if(dated && transactionName && transactionType && paymentType && price){\n\n            const BackUpState = this.state.transactions;\n            BackUpState.push({\n                id: BackUpState.length + 1,\n                date: dated,\n                name: transactionName,\n                type: transactionType,\n                method: paymentType,\n                price: price,\n                user_id: currentUID\n            });\n            \n            fire.database().ref('Transactions/' + currentUID).push({\n                id: BackUpState.length,\n                date: dated,\n                name: transactionName,\n                type: transactionType,\n                method: paymentType,\n                price: price,\n                user_id: currentUID\n            }).then((data) => {\n                //success callback\n                console.log('success callback');\n                this.setState({\n                    transactions: BackUpState,\n                    money: transactionType === 'deposit' ? money + parseFloat(price) : money - parseFloat(price),\n                    dated: '',\n                    transactionName: '',\n                    transactionType: '',\n                    paymentType: '',\n                    price: ''\n                })\n            }).catch((error)=>{\n                //error callback\n                console.log('error ' , error)\n            });\n\n        }\n    }\n\n    componentWillMount(){\n        const {currentUID, money} = this.state;\n        let totalMoney = money;\n        const BackUpState = this.state.transactions;\n        fire.database().ref('Transactions/' + currentUID).once('value',\n        (snapshot) => {\n            // console.log(snapshot);\n            snapshot.forEach((childSnapshot) => {\n\n                totalMoney = \n                    childSnapshot.val().type === 'deposit' ? \n                    parseFloat(childSnapshot.val().price) + totalMoney\n                    : totalMoney - parseFloat(childSnapshot.val().price);\n                \n                BackUpState.push({\n                    id: childSnapshot.val().id,\n                    date: childSnapshot.val().date,\n                    name: childSnapshot.val().name,\n                    type: childSnapshot.val().type,\n                    method: childSnapshot.val().method,\n                    price: childSnapshot.val().price,\n                    user_id: childSnapshot.val().user_id\n                });\n                // console.log(childSnapshot.val().name);\n            });\n            this.setState({\n                transactions: BackUpState,\n                money: totalMoney\n            });\n        });\n    }\n\n    render(){\n        var currentUser = fire.auth().currentUser;\n        return(\n            <div className=\"trackerBlock\">\n                <div className=\"welcome\">\n                    <span>Hi, {currentUser.displayName}!</span>\n                    <button className=\"exit\" onClick={this.logout}>Exit</button>\n                </div>\n                <div className=\"totalMoney\">Rs.{this.state.money}</div>\n\n                <div className=\"newTransactionBlock\">\n                    <div className=\"newTransaction\">\n                        <form>\n                        <input\n                                onChange={this.handleChange('dated')}\n                                value={this.state.dated}\n                                placeholder=\"Date\"\n                                type=\"date\"\n                                name=\"dated\"\n                            />\n                            <input\n                                onChange={this.handleChange('transactionName')}\n                                value={this.state.transactionName}\n                                placeholder=\"Transaction Name\"\n                                type=\"text\"\n                                name=\"transactionName\"\n                            />\n                            <div className=\"inputGroup\">\n                                <select name=\"type\"\n                                    onChange={this.handleChange('transactionType')}\n                                    value={this.state.transactionType}>\n                                    <option value=\"0\">Type</option>\n                                    <option value=\"expense\">Expense</option>\n                                    <option value=\"deposit\">Deposit</option>\n                                </select>\n                                <input\n                                    onChange={this.handleChange('price')}\n                                    value={this.state.price}\n                                    placeholder=\"Price\"\n                                    type=\"text\"\n                                    name=\"price\"\n                                />\n                            </div>\n                            <div className=\"inputGroup\">\n                                <select name=\"method\"\n                                    onChange={this.handleChange('paymentType')}\n                                    value={this.state.paymentType}>\n                                    <option value=\"0\">Method</option>\n                                    <option value=\"GPpay\">GPay</option>\n                                    <option value=\"PhonePe\">PhonePe</option>\n                                    <option value=\"PayTM\">PayTM</option>\n                                    <option value=\"Cash\">Cash</option>\n                                    <option value=\"Online\">Online</option>\n                                </select>\n                                \n                            </div>\n                        </form>\n                        <button onClick={() => this.addNewTransaction()} className=\"addTransaction\">+ Add Transaction</button>\n                    </div>\n                </div>\n                \n                <div className=\"latestTransactions\">\n                    <p>Latest Transactions</p>\n                    <ul>\n                        {\n                            Object.keys(this.state.transactions).map((id) => (\n                                <Transaction key={id}\n                                    dated={this.state.transactions[id].dated}\n                                    type={this.state.transactions[id].type}\n                                    method={this.state.transactions[id].method}\n                                    name={this.state.transactions[id].name}\n                                    price={this.state.transactions[id].price}\n                                />\n                            ))\n                        }\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Tracker;"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["config/Fire.js","components/Forms/Login.js","components/Forms/Register.js","assets/loader.gif","components/Tracker/Transaction/Transaction.js","components/Tracker/Tracker.js","components/Main.js","App.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","Login","state","email","password","fireErrors","login","e","preventDefault","auth","signInWithEmailAndPassword","catch","error","setState","message","handleChange","target","name","value","errorNotification","this","className","type","placeholder","onChange","onClick","Component","Register","displayName","register","createUserWithEmailAndPassword","then","user","currentUser","updateProfile","Transaction","props","date","method","price","Tracker","transactions","money","dated","transactionName","transactionType","paymentType","currentUID","uid","logout","signOut","input","addNewTransaction","BackUpState","push","id","length","user_id","database","ref","data","console","log","parseFloat","totalMoney","once","snapshot","forEach","childSnapshot","val","Object","keys","map","Main","loading","formSwitcher","action","authListener","onAuthStateChanged","form","src","Spinner","alt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0VAaeA,G,YADFC,EAASC,cAVP,CACXC,OAAQ,0CACVC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACPC,YAAY,sF,QC6CCC,G,kNAjDXC,MAAQ,CACJC,MAAO,GACPC,SAAU,GACVC,WAAY,I,EAGhBC,MAAQ,SAAAC,GACJA,EAAEC,iBACFjB,EAAKkB,OAAOC,2BAA2B,EAAKR,MAAMC,MAAO,EAAKD,MAAME,UACnEO,OAAM,SAACC,GACJ,EAAKC,SAAS,CAACR,WAAYO,EAAME,c,EAIzCC,aAAe,SAAAR,GACX,EAAKM,SAAL,eAAgBN,EAAES,OAAOC,KAAOV,EAAES,OAAOE,S,uDAKzC,IAAIC,EAAoBC,KAAKlB,MAAMG,WAC7B,sBAAKgB,UAAU,QAAf,cAAyBD,KAAKlB,MAAMG,WAApC,OAA2D,KAGjE,OACI,qCACKc,EACD,iCACI,uBAAOG,KAAK,OACRD,UAAU,WACVE,YAAY,QACZL,MAAOE,KAAKlB,MAAMC,MAClBqB,SAAUJ,KAAKL,aACfE,KAAK,UAET,uBACII,UAAU,WACVE,YAAY,UACZL,MAAOE,KAAKlB,MAAME,SAClBoB,SAAUJ,KAAKL,aACfE,KAAK,WACLK,KAAK,aAET,uBAAOD,UAAU,YAAYC,KAAK,SAASG,QAASL,KAAKd,MAAOY,MAAM,oB,GA5CtEQ,cC+DLC,G,kNA9DXzB,MAAQ,CACJC,MAAO,GACPC,SAAU,GACVwB,YAAa,GACbvB,WAAY,I,EAGhBwB,SAAW,SAAAtB,GACPA,EAAEC,iBACFjB,EAAKkB,OAAOqB,+BAA+B,EAAK5B,MAAMC,MAAO,EAAKD,MAAME,UAAU2B,MAAK,SAACC,GAClEzC,EAAKkB,OAAOwB,YAClBC,cAAc,CACtBN,YAAa,EAAK1B,MAAM0B,iBAG/BjB,OAAM,SAACC,GACJ,EAAKC,SAAS,CAACR,WAAYO,EAAME,c,EAIzCC,aAAe,SAAAR,GACX,EAAKM,SAAL,eAAgBN,EAAES,OAAOC,KAAOV,EAAES,OAAOE,S,uDAKzC,IAAIC,EAAoBC,KAAKlB,MAAMG,WAC7B,sBAAKgB,UAAU,QAAf,cAAyBD,KAAKlB,MAAMG,WAApC,OAA2D,KAGjE,OACI,qCACKc,EACD,iCACI,uBAAOG,KAAK,OACRD,UAAU,WACVE,YAAY,YACZL,MAAOE,KAAKlB,MAAM0B,YAClBJ,SAAUJ,KAAKL,aACfE,KAAK,gBAET,uBAAOK,KAAK,OACRD,UAAU,WACVE,YAAY,QACZL,MAAOE,KAAKlB,MAAMC,MAClBqB,SAAUJ,KAAKL,aACfE,KAAK,UAET,uBACII,UAAU,WACVE,YAAY,UACZL,MAAOE,KAAKlB,MAAME,SAClBoB,SAAUJ,KAAKL,aACfE,KAAK,WACLK,KAAK,aAET,uBAAOD,UAAU,YAAYC,KAAK,SAASG,QAASL,KAAKS,SAAUX,MAAM,uB,GAzDtEQ,cCJR,MAA0B,mCCmB1BS,G,MAjBK,SAAAC,GAChB,OACI,+BACI,8BAAMA,EAAMC,OACZ,8BAAMD,EAAMnB,OACZ,8BAAMmB,EAAME,SACZ,8BAAqB,YAAfF,EAAMd,KACR,uBAAMD,UAAU,UAAhB,eAA6Be,EAAMG,MAAnC,OAEA,uBAAMlB,UAAU,UAAhB,cACMe,EAAMG,gBCiLbC,E,4MAtLXtC,MAAQ,CACJuC,aAAc,GACdC,MAAO,EACPC,MAAO,GACPC,gBAAiB,GACjBC,gBAAiB,GACjBC,YAAc,GACdP,MAAO,GACPQ,WAAYxD,EAAKkB,OAAOwB,YAAYe,K,EAIxCC,OAAS,WACL1D,EAAKkB,OAAOyC,W,EAGhBnC,aAAe,SAAAoC,GAAK,OAAI,SAAA5C,GACpB,EAAKM,SAAL,eACKsC,EAA0B,MAAlB5C,EAAES,OAAOE,MAAeX,EAAES,OAAOE,MAAQ,O,EAK1DkC,kBAAoB,WAAO,IAAD,EACmE,EAAKlD,MAAvFyC,EADe,EACfA,MAAOC,EADQ,EACRA,gBAAiBC,EADT,EACSA,gBAAiBC,EAD1B,EAC0BA,YAAaP,EADvC,EACuCA,MAAOQ,EAD9C,EAC8CA,WAAYL,EAD1D,EAC0DA,MAGhF,GAAGC,GAASC,GAAmBC,GAAmBC,GAAeP,EAAM,CAEnE,IAAMc,EAAc,EAAKnD,MAAMuC,aAC/BY,EAAYC,KAAK,CACbC,GAAIF,EAAYG,OAAS,EACzBnB,KAAMM,EACN1B,KAAM2B,EACNtB,KAAMuB,EACNP,OAAQQ,EACRP,MAAOA,EACPkB,QAASV,IAGbxD,EAAKmE,WAAWC,IAAI,gBAAkBZ,GAAYO,KAAK,CACnDC,GAAIF,EAAYG,OAChBnB,KAAMM,EACN1B,KAAM2B,EACNtB,KAAMuB,EACNP,OAAQQ,EACRP,MAAOA,EACPkB,QAASV,IACVhB,MAAK,SAAC6B,GAELC,QAAQC,IAAI,oBACZ,EAAKjD,SAAS,CACV4B,aAAcY,EACdX,MAA2B,YAApBG,EAAgCH,EAAQqB,WAAWxB,GAASG,EAAQqB,WAAWxB,GACtFI,MAAO,GACPC,gBAAiB,GACjBC,gBAAiB,GACjBC,YAAa,GACbP,MAAO,QAEZ5B,OAAM,SAACC,GAENiD,QAAQC,IAAI,SAAWlD,Q,mEAMd,IAAD,SACYQ,KAAKlB,MAA1B6C,EADS,EACTA,WACHiB,EAFY,EACGtB,MAEbW,EAAcjC,KAAKlB,MAAMuC,aAC/BlD,EAAKmE,WAAWC,IAAI,gBAAkBZ,GAAYkB,KAAK,SACvD,SAACC,GAEGA,EAASC,SAAQ,SAACC,GAEdJ,EACiC,YAA7BI,EAAcC,MAAM/C,KACpByC,WAAWK,EAAcC,MAAM9B,OAASyB,EACtCA,EAAaD,WAAWK,EAAcC,MAAM9B,OAElDc,EAAYC,KAAK,CACbC,GAAIa,EAAcC,MAAMd,GACxBlB,KAAM+B,EAAcC,MAAMhC,KAC1BpB,KAAMmD,EAAcC,MAAMpD,KAC1BK,KAAM8C,EAAcC,MAAM/C,KAC1BgB,OAAQ8B,EAAcC,MAAM/B,OAC5BC,MAAO6B,EAAcC,MAAM9B,MAC3BkB,QAASW,EAAcC,MAAMZ,aAIrC,EAAK5C,SAAS,CACV4B,aAAcY,EACdX,MAAOsB,S,+BAKV,IAAD,OACA/B,EAAc1C,EAAKkB,OAAOwB,YAC9B,OACI,sBAAKZ,UAAU,eAAf,UACI,sBAAKA,UAAU,UAAf,UACI,wCAAWY,EAAYL,YAAvB,OACA,wBAAQP,UAAU,OAAOI,QAASL,KAAK6B,OAAvC,qBAEJ,sBAAK5B,UAAU,aAAf,gBAAgCD,KAAKlB,MAAMwC,SAE3C,qBAAKrB,UAAU,sBAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,iCACA,uBACQG,SAAUJ,KAAKL,aAAa,SAC5BG,MAAOE,KAAKlB,MAAMyC,MAClBpB,YAAY,OACZD,KAAK,OACLL,KAAK,UAET,uBACIO,SAAUJ,KAAKL,aAAa,mBAC5BG,MAAOE,KAAKlB,MAAM0C,gBAClBrB,YAAY,mBACZD,KAAK,OACLL,KAAK,oBAET,sBAAKI,UAAU,aAAf,UACI,yBAAQJ,KAAK,OACTO,SAAUJ,KAAKL,aAAa,mBAC5BG,MAAOE,KAAKlB,MAAM2C,gBAFtB,UAGI,wBAAQ3B,MAAM,IAAd,kBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,wBAEJ,uBACIM,SAAUJ,KAAKL,aAAa,SAC5BG,MAAOE,KAAKlB,MAAMqC,MAClBhB,YAAY,QACZD,KAAK,OACLL,KAAK,aAGb,qBAAKI,UAAU,aAAf,SACI,yBAAQJ,KAAK,SACTO,SAAUJ,KAAKL,aAAa,eAC5BG,MAAOE,KAAKlB,MAAM4C,YAFtB,UAGI,wBAAQ5B,MAAM,IAAd,oBACA,wBAAQA,MAAM,QAAd,kBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,4BAKZ,wBAAQO,QAAS,kBAAM,EAAK2B,qBAAqB/B,UAAU,iBAA3D,oCAIR,sBAAKA,UAAU,qBAAf,UACI,oDACA,6BAEQiD,OAAOC,KAAKnD,KAAKlB,MAAMuC,cAAc+B,KAAI,SAACjB,GAAD,OACrC,cAAC,EAAD,CACIlB,KAAM,EAAKnC,MAAMuC,aAAac,GAAIlB,KAClCf,KAAM,EAAKpB,MAAMuC,aAAac,GAAIjC,KAClCgB,OAAQ,EAAKpC,MAAMuC,aAAac,GAAIjB,OACpCrB,KAAM,EAAKf,MAAMuC,aAAac,GAAItC,KAClCsB,MAAO,EAAKrC,MAAMuC,aAAac,GAAIhB,OALrBgB,kB,GAxK5B7B,aCGD+C,E,4MACjBvE,MAAQ,CACJ8B,KAAM,EACN0C,SAAS,G,EAiBbC,aAAe,SAACC,GACZ,EAAK/D,SAAS,CAAC8D,aAAyB,aAAXC,K,kEAd/BxD,KAAKyD,iB,qCAGQ,IAAD,OACZtF,EAAKkB,OAAOqE,oBAAmB,SAAC9C,GAC3BA,EACD,EAAKnB,SAAS,CAACmB,SAEf,EAAKnB,SAAS,CAACmB,KAAK,Y,+BAShB,IAAD,OACC+C,EAAQ3D,KAAKlB,MAAMyE,aAA2B,cAAC,EAAD,IAAZ,cAAC,EAAD,IAExC,OAAwB,IAApBvD,KAAKlB,MAAM8B,KAET,qBAAKX,UAAU,YAAf,SACE,qBAAKA,UAAU,UAAf,SACE,qBAAK2D,IAAKC,EAASC,IAAI,UAAU7D,UAAU,mBAMjD,mCACMD,KAAKlB,MAAM8B,KAcN,cAAC,EAAD,IAbH,sBAAKX,UAAU,YAAf,UACG0D,EAEE3D,KAAKlB,MAAMyE,aAIV,uBAAMtD,UAAU,YAAhB,sCAAqD,wBAAQI,QAAS,kBAAM,EAAKkD,aAAc,EAAKzE,MAAMyE,aAA4B,QAAb,aACzHtD,UAAU,UAD2C,6BAHtD,uBAAMA,UAAU,YAAhB,6BAA4C,wBAAQI,QAAS,kBAAM,EAAKkD,aAAc,EAAKzE,MAAMyE,aAA4B,QAAb,aAC/GtD,UAAU,UADiC,2C,GA3CnCK,aCDnByD,MAJf,WACE,OAAQ,cAAC,EAAD,KCEVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ad5cd144.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyDNyBBwzatb-CJUriBeFwMmX7YE12kVueI\",\n  authDomain: \"expensetracker-app123.firebaseapp.com\",\n  projectId: \"expensetracker-app123\",\n  storageBucket: \"expensetracker-app123.appspot.com\",\n  messagingSenderId: \"853790456612\",\n  appId: \"1:853790456612:web:1420680a36a7587e14d1b1\",\n  databaseURL:\"https://expensetracker-app123-default-rtdb.asia-southeast1.firebasedatabase.app/\"\n};\n\nconst fire = firebase.initializeApp(config);\nexport default fire;","import React, {Component} from 'react';\nimport fire from '../../config/Fire';\nimport './Login.css';\n\nclass Login extends Component {\n    state = {\n        email: '',\n        password: '',\n        fireErrors: ''\n    }\n\n    login = e => {\n        e.preventDefault();\n        fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\n        .catch((error) => {\n            this.setState({fireErrors: error.message})\n        });\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    render() {\n\n        let errorNotification = this.state.fireErrors ? \n            ( <div className=\"Error\"> {this.state.fireErrors} </div> ) : null;\n\n        \n        return (\n            <>\n                {errorNotification}\n                <form>\n                    <input type=\"text\"\n                        className=\"regField\"\n                        placeholder=\"Email\"\n                        value={this.state.email} \n                        onChange={this.handleChange}\n                        name=\"email\"\n                        />\n                    <input\n                        className=\"regField\"\n                        placeholder=\"Pasword\"\n                        value={this.state.password} \n                        onChange={this.handleChange}\n                        name=\"password\"\n                        type=\"password\"\n                    />\n                    <input className=\"submitBtn\" type=\"submit\" onClick={this.login} value=\"ENTER\" />\n                </form>\n            </>\n        );\n    }\n}\nexport default Login;","import React, {Component} from 'react';\nimport fire from '../../config/Fire';\nimport './Reg.css';\n\nclass Register extends Component {\n    state = {\n        email: '',\n        password: '',\n        displayName: '',\n        fireErrors: ''\n    }\n\n    register = e => {\n        e.preventDefault();\n        fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((user) => {\n            var currentUser = fire.auth().currentUser;\n            currentUser.updateProfile({\n                displayName: this.state.displayName\n            })\n        })\n        .catch((error) => {\n            this.setState({fireErrors: error.message})\n        });\n    }\n\n    handleChange = e => {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    render() {\n\n        let errorNotification = this.state.fireErrors ? \n            ( <div className=\"Error\"> {this.state.fireErrors} </div> ) : null;\n\n        \n        return (\n            <>\n                {errorNotification}\n                <form>\n                    <input type=\"text\"\n                        className=\"regField\"\n                        placeholder=\"Your Name\"\n                        value={this.state.displayName} \n                        onChange={this.handleChange}\n                        name=\"displayName\"\n                        />\n                    <input type=\"text\"\n                        className=\"regField\"\n                        placeholder=\"Email\"\n                        value={this.state.email} \n                        onChange={this.handleChange}\n                        name=\"email\"\n                        />\n                    <input\n                        className=\"regField\"\n                        placeholder=\"Pasword\"\n                        value={this.state.password} \n                        onChange={this.handleChange}\n                        name=\"password\"\n                        type=\"password\"\n                    />\n                    <input className=\"submitBtn\" type=\"submit\" onClick={this.register} value=\"REGISTER\" />\n                </form>\n            </>\n        );\n    }\n}\nexport default Register;","export default __webpack_public_path__ + \"static/media/loader.1bcd0c30.gif\";","import React from 'react';\n\nconst Transaction = props => {\n    return (\n        <li>\n            <div>{props.date}</div>\n            <div>{props.name}</div>\n            <div>{props.method}</div>\n            <div>{props.type === 'deposit' ? (\n                <span className=\"deposit\"> +{props.price} </span>\n            ) : (\n                <span className=\"expense\">\n                    -{props.price}\n                </span>\n            )}</div>\n        </li>\n    );\n}\n\nexport default Transaction;","import React, { Component } from 'react';\nimport './Tracker.css';\nimport fire from '../../config/Fire';\nimport Transaction from './Transaction/Transaction';\n\nclass Tracker extends Component {\n\n    state = {\n        transactions: [],\n        money: 0,\n        dated: '',\n        transactionName: '',\n        transactionType: '',\n        paymentType : '',\n        price: '',\n        currentUID: fire.auth().currentUser.uid\n    }\n\n    // logout function\n    logout = () => {\n        fire.auth().signOut();\n    }\n\n    handleChange = input => e => {\n        this.setState({\n            [input]: e.target.value !==\"0\" ? e.target.value : \"\"\n        });\n    }\n\n    // add transaction\n    addNewTransaction = () => {\n        const {dated, transactionName, transactionType, paymentType, price, currentUID, money} = this.state;\n\n        // validation\n        if(dated && transactionName && transactionType && paymentType && price){\n\n            const BackUpState = this.state.transactions;\n            BackUpState.push({\n                id: BackUpState.length + 1,\n                date: dated,\n                name: transactionName,\n                type: transactionType,\n                method: paymentType,\n                price: price,\n                user_id: currentUID\n            });\n            \n            fire.database().ref('Transactions/' + currentUID).push({\n                id: BackUpState.length,\n                date: dated,\n                name: transactionName,\n                type: transactionType,\n                method: paymentType,\n                price: price,\n                user_id: currentUID\n            }).then((data) => {\n                //success callback\n                console.log('success callback');\n                this.setState({\n                    transactions: BackUpState,\n                    money: transactionType === 'deposit' ? money + parseFloat(price) : money - parseFloat(price),\n                    dated: '',\n                    transactionName: '',\n                    transactionType: '',\n                    paymentType: '',\n                    price: ''\n                })\n            }).catch((error)=>{\n                //error callback\n                console.log('error ' , error)\n            });\n\n        }\n    }\n\n    componentWillMount(){\n        const {currentUID, money} = this.state;\n        let totalMoney = money;\n        const BackUpState = this.state.transactions;\n        fire.database().ref('Transactions/' + currentUID).once('value',\n        (snapshot) => {\n            // console.log(snapshot);\n            snapshot.forEach((childSnapshot) => {\n\n                totalMoney = \n                    childSnapshot.val().type === 'deposit' ? \n                    parseFloat(childSnapshot.val().price) + totalMoney\n                    : totalMoney - parseFloat(childSnapshot.val().price);\n                \n                BackUpState.push({\n                    id: childSnapshot.val().id,\n                    date: childSnapshot.val().date,\n                    name: childSnapshot.val().name,\n                    type: childSnapshot.val().type,\n                    method: childSnapshot.val().method,\n                    price: childSnapshot.val().price,\n                    user_id: childSnapshot.val().user_id\n                });\n                // console.log(childSnapshot.val().name);\n            });\n            this.setState({\n                transactions: BackUpState,\n                money: totalMoney\n            });\n        });\n    }\n\n    render(){\n        var currentUser = fire.auth().currentUser;\n        return(\n            <div className=\"trackerBlock\">\n                <div className=\"welcome\">\n                    <span>Hi, {currentUser.displayName}!</span>\n                    <button className=\"exit\" onClick={this.logout}>Exit</button>\n                </div>\n                <div className=\"totalMoney\">Rs.{this.state.money}</div>\n\n                <div className=\"newTransactionBlock\">\n                    <div className=\"newTransaction\">\n                        <form>\n                        <input\n                                onChange={this.handleChange('dated')}\n                                value={this.state.dated}\n                                placeholder=\"Date\"\n                                type=\"date\"\n                                name=\"dated\"\n                            />\n                            <input\n                                onChange={this.handleChange('transactionName')}\n                                value={this.state.transactionName}\n                                placeholder=\"Transaction Name\"\n                                type=\"text\"\n                                name=\"transactionName\"\n                            />\n                            <div className=\"inputGroup\">\n                                <select name=\"type\"\n                                    onChange={this.handleChange('transactionType')}\n                                    value={this.state.transactionType}>\n                                    <option value=\"0\">Type</option>\n                                    <option value=\"expense\">Expense</option>\n                                    <option value=\"deposit\">Deposit</option>\n                                </select>\n                                <input\n                                    onChange={this.handleChange('price')}\n                                    value={this.state.price}\n                                    placeholder=\"Price\"\n                                    type=\"text\"\n                                    name=\"price\"\n                                />\n                            </div>\n                            <div className=\"inputGroup\">\n                                <select name=\"method\"\n                                    onChange={this.handleChange('paymentType')}\n                                    value={this.state.paymentType}>\n                                    <option value=\"0\">Method</option>\n                                    <option value=\"GPpay\">GPay</option>\n                                    <option value=\"PhonePe\">PhonePe</option>\n                                    <option value=\"PayTM\">PayTM</option>\n                                    <option value=\"Cash\">Cash</option>\n                                    <option value=\"Online\">Online</option>\n                                </select>\n                                \n                            </div>\n                        </form>\n                        <button onClick={() => this.addNewTransaction()} className=\"addTransaction\">+ Add Transaction</button>\n                    </div>\n                </div>\n                \n                <div className=\"latestTransactions\">\n                    <p>Latest Transactions</p>\n                    <ul>\n                        {\n                            Object.keys(this.state.transactions).map((id) => (\n                                <Transaction key={id}\n                                    date={this.state.transactions[id].date}\n                                    type={this.state.transactions[id].type}\n                                    method={this.state.transactions[id].method}\n                                    name={this.state.transactions[id].name}\n                                    price={this.state.transactions[id].price}\n                                />\n                            ))\n                        }\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Tracker;","import React, { Component } from 'react';\nimport './Main.css';\nimport fire from '../config/Fire';\nimport Login from './Forms/Login';\nimport Register from './Forms/Register';\nimport Spinner from '../assets/loader.gif';\nimport Tracker from './Tracker/Tracker';\n\nexport default class Main extends Component {\n    state = {\n        user: 1,\n        loading: true\n    }\n\n    componentDidMount(){\n      this.authListener();\n    }\n\n    authListener(){\n      fire.auth().onAuthStateChanged((user) => {\n        if(user){\n          this.setState({user});\n        }else{\n          this.setState({user:null});\n        }\n      });\n    }\n\n    formSwitcher = (action) => {\n        this.setState({formSwitcher: action === 'register' ? true : false});\n    }\n\n    render() {\n        const form = !this.state.formSwitcher ? <Login /> : <Register />;\n\n        if (this.state.user === 1){\n            return (\n              <div className=\"mainBlock\">\n                <div className=\"Spinner\">\n                  <img src={Spinner} alt=\"Spinner\" className=\"ImgSpinner\" />\n                </div>\n              </div>);\n        }\n\n        return (\n            <>\n                {!this.state.user ? (\n                    <div className=\"mainBlock\">\n                      {form}\n                      {\n                        !this.state.formSwitcher ?\n                        (<span className=\"underLine\">Not registered? <button onClick={() => this.formSwitcher(!this.state.formSwitcher ? 'register' : 'login')} \n                          className=\"linkBtn\">Create an account</button>\n                        </span>) : (\n                          <span className=\"underLine\">Have an account already? <button onClick={() => this.formSwitcher(!this.state.formSwitcher ? 'register' : 'login')} \n                          className=\"linkBtn\">Sign in here</button>\n                        </span>\n                        )\n                      }\n                    </div>\n                  ) : (<Tracker />)}\n            </>\n        );\n    }\n}","import './App.css';\nimport Main from './components/Main';\n\nfunction App() {\n  return (<Main />);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}